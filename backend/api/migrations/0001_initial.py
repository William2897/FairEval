# Generated by Django 5.0.2 on 2025-02-16 16:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('professor_id', models.CharField(max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=10, null=True)),
                ('discipline', models.CharField(db_index=True, max_length=100)),
                ('sub_discipline', models.CharField(db_index=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
                'indexes': [models.Index(fields=['discipline', 'sub_discipline'], name='api_profess_discipl_a763ff_idx'), models.Index(fields=['gender', 'discipline'], name='api_profess_gender_4edddf_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrator'), ('ACADEMIC', 'Professor')], default='ACADEMIC', max_length=10)),
                ('discipline', models.CharField(blank=True, max_length=200, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='role', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Role',
                'verbose_name_plural': 'User Roles',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avg_rating', models.FloatField(db_index=True, default=0.0)),
                ('flag_status', models.CharField(db_index=True, max_length=50, null=True)),
                ('helpful_rating', models.FloatField(db_index=True, null=True)),
                ('clarity_rating', models.FloatField(db_index=True, null=True)),
                ('difficulty_rating', models.FloatField(db_index=True, null=True)),
                ('is_online', models.BooleanField(db_index=True, default=False)),
                ('is_for_credit', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('professor', models.ForeignKey(db_column='professor_id', on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='api.professor', to_field='professor_id')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['professor', 'created_at'], name='api_rating_profess_7ea0e4_idx'), models.Index(fields=['avg_rating', 'helpful_rating', 'clarity_rating', 'difficulty_rating'], name='api_rating_avg_rat_d0f0f6_idx')],
            },
        ),
        migrations.CreateModel(
            name='Sentiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(null=True)),
                ('processed_comment', models.TextField(null=True)),
                ('sentiment', models.FloatField(db_index=True, null=True)),
                ('confidence', models.FloatField(null=True)),
                ('comment_topic', models.CharField(db_index=True, max_length=100, null=True)),
                ('vader_compound', models.FloatField(null=True)),
                ('vader_positive', models.FloatField(null=True)),
                ('vader_negative', models.FloatField(null=True)),
                ('vader_neutral', models.FloatField(null=True)),
                ('positive_terms_lexicon', models.JSONField(null=True)),
                ('negative_terms_lexicon', models.JSONField(null=True)),
                ('positive_terms_vader', models.JSONField(null=True)),
                ('negative_terms_vader', models.JSONField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('professor', models.ForeignKey(db_column='professor_id', on_delete=django.db.models.deletion.CASCADE, related_name='sentiments', to='api.professor', to_field='professor_id')),
            ],
            options={
                'indexes': [models.Index(fields=['professor', 'sentiment'], name='api_sentime_profess_b5feff_idx'), models.Index(fields=['professor', 'created_at'], name='api_sentime_profess_fe97ba_idx')],
            },
        ),
    ]
